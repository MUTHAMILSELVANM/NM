import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Sample sales data (replace with actual CSV or DB)
data = {
    'Month': np.arange(1, 13),  # Months 1 to 12
    'Sales': [200, 220, 250, 230, 280, 300, 320, 310, 330, 360, 400, 420]
}
df = pd.DataFrame(data)

# Features (Month) and target (Sales)
X = df[['Month']]
y = df['Sales']

# Split into train and test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict future sales
future_months = np.array([[13], [14], [15]])  # Predicting next 3 months
future_sales = model.predict(future_months)

# Print predictions
for month, sale in zip(future_months.flatten(), future_sales):
    print(f"Predicted sales for month {month}: {sale:.2f} units")

# Optional: plot the results
plt.scatter(X, y, color='blue', label='Actual Sales')
plt.plot(X, model.predict(X), color='red', label='Trend Line')
plt.scatter(future_months, future_sales, color='green', label='Predictions')
plt.xlabel("Month")
plt.ylabel("Sales")
plt.title("AI-Powered Demand Forecasting")
plt.legend()
plt.grid(True)
plt.show()
